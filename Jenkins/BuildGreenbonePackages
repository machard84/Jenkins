pipeline{
    environment {
        REGISTRY = 'registry.chardma.org.uk:8443'
        GIT_URL = 'https://github.com/greenbone/'
    }
    agent {
        docker { image 'debian:latest' }
    }
    stages{
        stage('Matrix push docker images'){
            matrix{
                axes{
                    axis{
                        name    PACKAGE
                        values  "gvm-libs",
                                "openvas",
                                "gvmd",
                                "openvas-smb",
                                "gsa",
                                "ospd-openvas",
                                "ospd",
                                "pheme"
                    }
                }
                stages{
                    stage("Pull from git repositories") {
                        steps {
                            dir('${PACKAGE}') {
                                git url: '${GIT_URL}/${PACKAGE}.git',
                                        branch: 'master'
                                /* credentialsId: 'my_cred_id', */
                            }
                        }
                    }
                    stage("create build directory") {
                        steps {
                            dir("${WORKSPACE}/${PACKAGE}"){
                                sh 'mkdir build'
                            }
                        }
                    }
                    stage("run make steps"){
                        steps {
                            dir("${WORKSPACE}/${PACKAGE}/build"){
                                sh 'cmake ..'
                                sh 'make'
                                sh 'make package'
                            }
                        }
                    }
                    stage("Push built package to registry") {
                        steps {
                            echo 'here we push to repo'
                        }
                    }
                }
            }
        }
    }
    post {
        always {
            echo 'Clean up'
            cleanWs()
            deleteDir()
        }
        success {
            echo 'Success'
        }
        failure {
            echo 'Fail'
        }
    }
}